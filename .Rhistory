library(lexicon)
library(qdap)
library(stringr)
library(reticulate)
###Load data----
data(hash_internet_slang)
data(hash_emoticons)
data(key_grade)
data(key_rating)
hash_internet_slang
hash_emoticons
key_grade
key_rating
#http://www.unicode.org/emoji/charts/full-emoji-list.html V13.0
hash_emoticons_unicode = read.csv("../Manuscript/Package/data/extdata/emoticon_unicode.csv")
hashtag_dictionary = read.csv("../Manuscript/Package/data/extdata/hashtag_dictionary.csv")
hashtag_dictionary = subset(hashtag_dictionary, breakdown != "")
hashtag_dictionary$vec = as.character(hashtag_dictionary$full)
hashtag_dictionary$breakdown = as.character(hashtag_dictionary$breakdown)
#https://www.webopedia.com/quick_ref/textmessageabbreviations.asp
abbreviations = read.csv("../Manuscript/Package/data/extdata/abbreviation.csv")
mop = list(hash_dic = hashtag_dictionary,
abb = abbreviations,
emo_uni = hash_emoticons_unicode,
emo_asc = hash_emoticons,
slang = hash_internet_slang,
grade = key_grade,
rating = key_rating)
devtools::use_data(mop)
?use_data
use_data_raw("mop")
install.packages("usethis")
install.packages("usethis")
use_data_raw("mop")
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
library(usethis)
use_data_raw("mop", open = rlang::is_interactive())
## code to prepare `mop` dataset goes here
###Load data----
data(hash_internet_slang)
data(hash_emoticons)
data(key_grade)
data(key_rating)
hash_internet_slang
hash_emoticons
key_grade
key_rating
#http://www.unicode.org/emoji/charts/full-emoji-list.html V13.0
hash_emoticons_unicode = read.csv("../Manuscript/Package/data/extdata/emoticon_unicode.csv")
#homemade
hashtag_dictionary = read.csv("../Manuscript/Package/data/extdata/hashtag_dictionary.csv")
hashtag_dictionary = subset(hashtag_dictionary, breakdown != "")
hashtag_dictionary$vec = as.character(hashtag_dictionary$full)
hashtag_dictionary$breakdown = as.character(hashtag_dictionary$breakdown)
#https://www.webopedia.com/quick_ref/textmessageabbreviations.asp
abbreviations = read.csv("../Manuscript/Package/data/extdata/abbreviation.csv")
mop = list(hash_dic = hashtag_dictionary,
abb = abbreviations,
emo_uni = hash_emoticons_unicode,
emo_asc = hash_emoticons,
slang = hash_internet_slang,
grade = key_grade,
rating = key_rating)
usethis::use_data("mop")
usethis::use_data(mop)
document()
?Documentation
devtools::document()
